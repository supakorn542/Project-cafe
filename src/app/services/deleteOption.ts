import { db } from "../lib/firebase";
import { collection, query, where, getDocs, deleteDoc, doc } from "firebase/firestore";

export const deleteOptionWithReferences = async (optionId: string) => {
  try {
    const optionRef = doc(db, "options", optionId); // üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á Document Reference

    // 1Ô∏è‚É£ ‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏à‡∏≤‡∏Å optionItems ‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á optionId
    const optionItemsRef = collection(db, "optionItems");
    const optionItemsQuery = query(optionItemsRef, where("option_id", "==", optionRef)); // üîπ ‡πÄ‡∏ä‡πá‡∏Ñ reference
    const optionItemsSnapshot = await getDocs(optionItemsQuery);

    for (const docSnap of optionItemsSnapshot.docs) {
      await deleteDoc(doc(db, "optionItems", docSnap.id));
    }

    // 2Ô∏è‚É£ ‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏à‡∏≤‡∏Å productOptions ‡∏ó‡∏µ‡πà option_id ‡πÄ‡∏õ‡πá‡∏ô array ‡∏ó‡∏µ‡πà‡∏°‡∏µ reference ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
    const productOptionsRef = collection(db, "productOptions");
    const productOptionsQuery = query(productOptionsRef, where("option_id", "array-contains", optionRef)); // üîπ ‡πÄ‡∏ä‡πá‡∏Ñ array ‡∏Ç‡∏≠‡∏á reference
    const productOptionsSnapshot = await getDocs(productOptionsQuery);

    for (const docSnap of productOptionsSnapshot.docs) {
      await deleteDoc(doc(db, "productOptions", docSnap.id));
    }

    // 3Ô∏è‚É£ ‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏à‡∏≤‡∏Å options
    await deleteDoc(optionRef);

    ;
  } catch (error) {
    ;
  }
};
